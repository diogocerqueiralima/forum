services:
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    networks:
      - network
    env_file:
      - .env
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
    networks:
      - network
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.0
    command: ["start-dev"]
    ports:
      - "8080:8080"
      - "9000:9000"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: true
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/9000 && echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 5s
    networks:
      - network
  notification-service:
    container_name: notification-service
    image: docker.io/library/notification-service:1.0.0
    networks:
      - network
    depends_on:
      keycloak:
        condition: service_healthy
    env_file:
      - .env
  forum-service:
    container_name: forum-service
    image: docker.io/library/forum-service:1.0.0
    depends_on:
      postgres:
        condition: service_started
      notification-service:
        condition: service_started
      keycloak:
        condition: service_healthy
    networks:
      - network
    env_file:
      - .env
  gateway:
    container_name: gateway
    image: docker.io/library/gateway:1.0.0
    ports:
      - "9090:8080"
    depends_on:
      - forum-service
    networks:
      - network
    env_file:
      - .env

networks:
  network:
    name: forum-network
